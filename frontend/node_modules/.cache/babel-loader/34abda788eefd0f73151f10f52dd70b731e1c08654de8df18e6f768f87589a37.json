{"ast":null,"code":"var _jsxFileName = \"/Users/jessicalee/Documents/GitHub/journal-app/frontend/src/pages/AddEntry.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./AddEntry.css\";\nimport mic from \"../assets/mic.png\";\nimport chicken from \"../assets/chicken.png\"; // Your chicken image path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddEntry() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [textInput, setTextInput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const animationRef = useRef(null);\n  const [volume, setVolume] = useState(0);\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaStreamSource(stream);\n    const analyser = audioContext.createAnalyser();\n    source.connect(analyser);\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const animate = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const average = dataArray.reduce((acc, val) => acc + val, 0) / bufferLength;\n      setVolume(average);\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n    mediaRecorder.ondataavailable = event => {\n      audioChunksRef.current.push(event.data);\n    };\n    mediaRecorder.onstop = () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      const url = URL.createObjectURL(audioBlob);\n      setAudioUrl(url);\n      audioChunksRef.current = [];\n    };\n    mediaRecorder.start();\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n    cancelAnimationFrame(animationRef.current);\n    setVolume(0);\n  };\n  const handleTextChange = event => {\n    setTextInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-entry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chicken-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: chicken,\n        alt: \"Chicken\",\n        className: \"chicken-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: textInput,\n        onChange: handleTextChange,\n        placeholder: \"Enter text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `mic-button ${isRecording ? \"recording\" : \"\"}`,\n      style: {\n        transform: `scale(${1 + volume / 200})`\n      },\n      onClick: isRecording ? stopRecording : startRecording,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mic,\n        alt: \"Microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(AddEntry, \"dP/7Heh/G5EwTgMIezJVGvzDLcw=\");\n_c = AddEntry;\nexport default AddEntry;\nvar _c;\n$RefreshReg$(_c, \"AddEntry\");","map":{"version":3,"names":["useState","useRef","useEffect","mic","chicken","jsxDEV","_jsxDEV","AddEntry","_s","isRecording","setIsRecording","audioUrl","setAudioUrl","textInput","setTextInput","mediaRecorderRef","audioChunksRef","animationRef","volume","setVolume","current","cancelAnimationFrame","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioContext","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","animate","getByteFrequencyData","average","reduce","acc","val","requestAnimationFrame","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","url","URL","createObjectURL","start","stopRecording","stop","handleTextChange","target","value","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","style","transform","onClick","controls","_c","$RefreshReg$"],"sources":["/Users/jessicalee/Documents/GitHub/journal-app/frontend/src/pages/AddEntry.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport \"./AddEntry.css\";\nimport mic from \"../assets/mic.png\";\nimport chicken from \"../assets/chicken.png\"; // Your chicken image path\n\nfunction AddEntry() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [textInput, setTextInput] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const animationRef = useRef(null);\n\n  const [volume, setVolume] = useState(0);\n\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaStreamSource(stream);\n    const analyser = audioContext.createAnalyser();\n    source.connect(analyser);\n    analyser.fftSize = 256;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const animate = () => {\n      analyser.getByteFrequencyData(dataArray);\n      const average =\n        dataArray.reduce((acc, val) => acc + val, 0) / bufferLength;\n      setVolume(average);\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n\n    mediaRecorder.ondataavailable = (event) => {\n      audioChunksRef.current.push(event.data);\n    };\n\n    mediaRecorder.onstop = () => {\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\n      const url = URL.createObjectURL(audioBlob);\n      setAudioUrl(url);\n      audioChunksRef.current = [];\n    };\n\n    mediaRecorder.start();\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n    cancelAnimationFrame(animationRef.current);\n    setVolume(0);\n  };\n\n  const handleTextChange = (event) => {\n    setTextInput(event.target.value);\n  };\n\n  return (\n    <div className=\"add-entry\">\n      <div className=\"chicken-container\">\n        <img src={chicken} alt=\"Chicken\" className=\"chicken-image\" />\n        {audioUrl && (\n          <input\n            type=\"text\"\n            className=\"text-input\"\n            value={textInput}\n            onChange={handleTextChange}\n            placeholder=\"Enter text\"\n          />\n        )}\n      </div>\n\n      <button\n        className={`mic-button ${isRecording ? \"recording\" : \"\"}`}\n        style={{ transform: `scale(${1 + volume / 200})` }}\n        onClick={isRecording ? stopRecording : startRecording}\n      >\n        <img src={mic} alt=\"Microphone\" />\n      </button>\n\n      {audioUrl && (\n        <div className=\"audio-preview\">\n          <audio controls src={audioUrl}></audio>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AddEntry;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAO,gBAAgB;AACvB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,OAAO,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMe,gBAAgB,GAAGd,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMe,cAAc,GAAGf,MAAM,CAAC,EAAE,CAAC;EACjC,MAAMgB,YAAY,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAEvCE,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIe,YAAY,CAACG,OAAO,EAAEC,oBAAoB,CAACJ,YAAY,CAACG,OAAO,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC/CR,gBAAgB,CAACK,OAAO,GAAGQ,aAAa;IAExC,MAAME,YAAY,GAAG,IAAIC,YAAY,CAAC,CAAC;IACvC,MAAMC,MAAM,GAAGF,YAAY,CAACG,uBAAuB,CAACV,MAAM,CAAC;IAC3D,MAAMW,QAAQ,GAAGJ,YAAY,CAACK,cAAc,CAAC,CAAC;IAC9CH,MAAM,CAACI,OAAO,CAACF,QAAQ,CAAC;IACxBA,QAAQ,CAACG,OAAO,GAAG,GAAG;IAEtB,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,iBAAiB;IAC/C,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAACH,YAAY,CAAC;IAE9C,MAAMI,OAAO,GAAGA,CAAA,KAAM;MACpBR,QAAQ,CAACS,oBAAoB,CAACH,SAAS,CAAC;MACxC,MAAMI,OAAO,GACXJ,SAAS,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,GAAGT,YAAY;MAC7DnB,SAAS,CAACyB,OAAO,CAAC;MAClB3B,YAAY,CAACG,OAAO,GAAG4B,qBAAqB,CAACN,OAAO,CAAC;IACvD,CAAC;IACDA,OAAO,CAAC,CAAC;IAETd,aAAa,CAACqB,eAAe,GAAIC,KAAK,IAAK;MACzClC,cAAc,CAACI,OAAO,CAAC+B,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IACzC,CAAC;IAEDxB,aAAa,CAACyB,MAAM,GAAG,MAAM;MAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACvC,cAAc,CAACI,OAAO,EAAE;QAAEoC,IAAI,EAAE;MAAY,CAAC,CAAC;MACzE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,SAAS,CAAC;MAC1C1C,WAAW,CAAC6C,GAAG,CAAC;MAChBzC,cAAc,CAACI,OAAO,GAAG,EAAE;IAC7B,CAAC;IAEDQ,aAAa,CAACgC,KAAK,CAAC,CAAC;IACrBlD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMmD,aAAa,GAAGA,CAAA,KAAM;IAC1B9C,gBAAgB,CAACK,OAAO,CAAC0C,IAAI,CAAC,CAAC;IAC/BpD,cAAc,CAAC,KAAK,CAAC;IACrBW,oBAAoB,CAACJ,YAAY,CAACG,OAAO,CAAC;IAC1CD,SAAS,CAAC,CAAC,CAAC;EACd,CAAC;EAED,MAAM4C,gBAAgB,GAAIb,KAAK,IAAK;IAClCpC,YAAY,CAACoC,KAAK,CAACc,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,oBACE3D,OAAA;IAAK4D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7D,OAAA;MAAK4D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC7D,OAAA;QAAK8D,GAAG,EAAEhE,OAAQ;QAACiE,GAAG,EAAC,SAAS;QAACH,SAAS,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5D9D,QAAQ,iBACPL,OAAA;QACEkD,IAAI,EAAC,MAAM;QACXU,SAAS,EAAC,YAAY;QACtBD,KAAK,EAAEpD,SAAU;QACjB6D,QAAQ,EAAEX,gBAAiB;QAC3BY,WAAW,EAAC;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENnE,OAAA;MACE4D,SAAS,EAAE,cAAczD,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;MAC1DmE,KAAK,EAAE;QAAEC,SAAS,EAAE,SAAS,CAAC,GAAG3D,MAAM,GAAG,GAAG;MAAI,CAAE;MACnD4D,OAAO,EAAErE,WAAW,GAAGoD,aAAa,GAAGvC,cAAe;MAAA6C,QAAA,eAEtD7D,OAAA;QAAK8D,GAAG,EAAEjE,GAAI;QAACkE,GAAG,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EAER9D,QAAQ,iBACPL,OAAA;MAAK4D,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B7D,OAAA;QAAOyE,QAAQ;QAACX,GAAG,EAAEzD;MAAS;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjE,EAAA,CA/FQD,QAAQ;AAAAyE,EAAA,GAARzE,QAAQ;AAiGjB,eAAeA,QAAQ;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}