{"ast":null,"code":"var _jsxFileName = \"/Users/jessicalee/Documents/GitHub/journal-app/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Home.css\";\nimport left from \"../assets/left.png\";\nimport right from \"../assets/right.png\";\nimport sad from \"../assets/sad.jpg\";\nimport happy from \"../assets/happy.jpeg\";\nimport mid from \"../assets/mid.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [sad, happy, mid];\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nfunction Home() {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(null); // Store selected day\n  const [modalOpen, setModalOpen] = useState(false); // Manage modal visibility\n\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n  const getDaysInMonth = (year, month) => new Date(year, month + 1, 0).getDate();\n  function renderDaysGrid() {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const daysInMonth = getDaysInMonth(year, month);\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const days = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day empty\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const randomImage = images[Math.floor(Math.random() * images.length)]; // Random image selection\n\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomImage,\n          alt: `Day ${day}`,\n          className: \"day-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-number\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \" \"]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: left,\n          alt: \"Previous Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [monthNames[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: right,\n          alt: \"Next Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: renderDaysGrid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tDY1wz0hTqnkMNTcHg4W/X0d4Mc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","left","right","sad","happy","mid","jsxDEV","_jsxDEV","images","monthNames","Home","_s","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","modalOpen","setModalOpen","handlePrevMonth","getFullYear","getMonth","handleNextMonth","getDaysInMonth","year","month","getDate","renderDaysGrid","daysInMonth","firstDayOfMonth","getDay","days","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","day","randomImage","Math","floor","random","length","children","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/jessicalee/Documents/GitHub/journal-app/frontend/src/pages/Home.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Home.css\";\nimport left from \"../assets/left.png\";\nimport right from \"../assets/right.png\";\nimport sad from \"../assets/sad.jpg\";\nimport happy from \"../assets/happy.jpeg\";\nimport mid from \"../assets/mid.jpg\";\n\nconst images = [sad, happy, mid];\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction Home() {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(null); // Store selected day\n  const [modalOpen, setModalOpen] = useState(false); // Manage modal visibility\n\n  const handlePrevMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)\n    );\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)\n    );\n  };\n\n  const getDaysInMonth = (year, month) =>\n    new Date(year, month + 1, 0).getDate();\n\n  function renderDaysGrid() {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const daysInMonth = getDaysInMonth(year, month);\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n\n    const days = [];\n\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(<div key={`empty-${i}`} className=\"day empty\"></div>);\n    }\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const randomImage = images[Math.floor(Math.random() * images.length)]; // Random image selection\n\n      days.push(\n        <div key={day} className=\"day\">\n          <img src={randomImage} alt={`Day ${day}`} className=\"day-image\" />\n          <div className=\"day-number\">{day}</div> {/* Add the day number */}\n        </div>\n      );\n    }\n\n    return days;\n  }\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"month-navigation\">\n        <button onClick={handlePrevMonth}>\n          <img src={left} alt=\"Previous Month\" />\n        </button>\n        <h1>\n          {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n        </h1>\n        <button onClick={handleNextMonth}>\n          <img src={right} alt=\"Next Month\" />\n        </button>\n      </div>\n\n      <div className=\"calendar-grid\">{renderDaysGrid()}</div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}